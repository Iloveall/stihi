angular
  .module('app', [
    'ngRoute',
    'ui.bootstrap'
  ])
  .config(['$routeProvider', function($routeProvider) {
    $routeProvider.when('/', {
      templateUrl: 'js/view/post/list.html',
      controller: 'blogCtrl as blogCtrl'
    });
  }]);
  // .config(['$routeProvider', function($routeProvider) {
  //   $routeProvider.otherwise({redirectTo: '/view1'});
  // }]);

angular
  .module('app')
  .factory('User', ['$rootScope', '$http', function ($rootScope, $http) {

    'use strict';

    console.log('User');

    var HTTP_URL = 'api/user'

    var f = {};

    f.create = function (data) {
      return $http.post(HTTP_URL + '/create', data);
    };

    f.auth = function (data) {
      return $http.post(HTTP_URL + '/auth', data);
    };

    f.getIsAuth = function () {
      return $http.get(HTTP_URL + '/is-auth');
    };

    return f;

  }]);

angular
  .module('app')
  .controller('authCtrl', ['$scope', 'User', function ($scope, User) {

    'use strict';

    var c = {};

    $scope.user = {};
    c.authErrors = null;
    c.authMessages = null;

    // console.log('authCtrl');

    c.register = function (form) {

      if (form) {
        form.$setPristine();
        form.$setUntouched();
      }

      if (form.$invalid) {
        return;
      }

      User.create($scope.user).success(function(response) {

        c.user = response.user;
        c.authMessages = response.messages;
        c.authErrors = null;

      }).error(function(response) {

        c.authErrors = response.errors;
        c.authMessages = null;

      });
    };

    c.auth = function (form) {

      if (form) {
        form.$setPristine();
        form.$setUntouched();
      }

      if (form.$invalid) {
        return;
      }

      User.auth($scope.user).success(function(response) {

        c.user = response.user;
        c.authMessages = response.messages;
        c.authErrors = null;

      }).error(function(response) {

        c.authErrors = response.errors;
        c.authMessages = null;

      });
    };

    return c;

  }]);

angular
  .module('app')
  .controller('appCtrl', ['$scope', '$uibModal', 'User', function ($scope, $uibModal, User) {

    'use strict';

    var c = {};

    c.isAuth = false;
    c.isAuthLoaded = false;

    c.getIsAuth = function () {
      c.isAuthLoaded = false;
      User.getIsAuth().success(function(response) {
        c.isAuth = true;
        c.isAuthLoaded = true;
      }).error(function(response) {
        c.isAuth = false;
        c.isAuthLoaded = true;
      });
    }

    c.getIsAuth();

    return c;

  }]);

angular
  .module('app')
  .controller('blogCtrl', ['$scope', '$uibModal', function ($scope, $uibModal) {

    'use strict';

    var c = {};

    c.isSpinner = true;
    c.isAnimation = true;

    c.blogs = [
      {
        'id': '1',
        'user_id': '1',
        'title': 'Котик мурмотик',
        'description': 'Стишочек про котика мурмотика',
        'text': 'Котик мурмотик - мягкий животик, Острые зубки и влажненький носик. Лежит на подушке и сладко зевает, Его там за ушко - Насяся щипает'
      },
      {
        'id': '2',
        'user_id': '1',
        'title': 'Зайка мой хороший',
        'description': 'Стишочек про зайчика',
        'text': 'Зайчик мой хороший - умненький красивый, Знает он все коды - коды бутерброды!! Сайтики красивые - всеееем он нарисует, Но а Наську Маську - потом он - утром зацелует'
      },
      {
        'id': '3',
        'user_id': '1',
        'title': 'Сказочку дарю тебе',
        'description': 'Стишочек про оленя',
        'text': 'Сказку даришь каждый день, И надев костюм Олень - Ты танцуешь до упада И смешишшь Меня Как Надо :) Целовашки целоваешь - крепко крепко обнимаешь, И обняв меня так сладко - Ти найкраще кошенятко =*'
      }
    ];

    c.getBlogs = function () {
      return c.blogs;
    };

    c.openPost = function (id) {

      var post = c.getPostById(id);

      var modalInstance = $uibModal.open({
        animation: c.isAnimation,
        templateUrl: 'js/post/template/post-popup.html',
        size: 'md',
        scope: $scope,
        controller: 'postCtrl',
        controllerAs: 'postCtrl',
        resolve: {
          post: function () {
            return post;
          }
        }
      });
    };

    c.getPostById = function (id) {
      return _.find(c.blogs, function(o) { return o.id === id; });
    };

    return c;

  }]);

angular
  .module('app')
  .controller('headerCtrl', ['$uibModal', function ($uibModal) {

    'use strict';

    var c = {};

    c.isAnimation = true;

    console.log('headerCtrl');

    c.openAuth = function () {

      var modalInstance = $uibModal.open({
        animation: c.isAnimation,
        templateUrl: 'js/auth/template/auth-popup.html',
        controller: 'authCtrl',
        controllerAs: 'authCtrl',
        size: 'sm',
        resolve: {
          items: function () {
            return '1';
          }
        }
      });

    };

    c.openRegister = function () {

      var modalInstance = $uibModal.open({
        animation: c.isAnimation,
        templateUrl: 'js/auth/template/register-popup.html',
        controller: 'authCtrl',
        controllerAs: 'authCtrl',
        size: 'sm',
        resolve: {
          items: function () {
            return '1';
          }
        }
      });

    };

    return c;

  }]);

angular
  .module('app')
  .controller('postCtrl', ['$scope', '$uibModal', 'post', function ($scope, $uibModal, post) {

    'use strict';

    var c = {};

    c.post = post;

    console.log('postCtrl', post);

    return c;

  }]);

angular
  .module('app')
  .factory('Post', ['$scope', '$http', function ($scope, $http) {

    'use strict';

    console.log('postService');

    var f = {};

    var URL = 'api/post';

    f.get = function () {
      return $http.get(URL);
    };

    return f;

  }]);
