angular
  .module('app', [
    'ngRoute',
    'ngDialog'
  ])
  .config(['$routeProvider', function($routeProvider) {
    $routeProvider.when('/', {
      templateUrl: 'js/view/post/list.html',
      controller: 'blogCtrl as blogCtrl'
    });
  }]);
  // .config(['$routeProvider', function($routeProvider) {
  //   $routeProvider.otherwise({redirectTo: '/view1'});
  // }]);

angular
  .module('app')
  .factory('User', ['$rootScope', '$http', '$window', function ($rootScope, $http, $window) {

    'use strict';

    console.log('User');

    var HTTP_URL = 'api/user'

    var f = {};

    var user = null;

    f.getUser = function () {
      return user;
    };

    f.setUser = function (user) {
      user = user;
      f.setToken(user.api_token);
      $rootScope.$broadcast('setAuthOn', {user: user});

      return user;
    };

    f.destroyUser = function (user) {
      user = null;
    }

    f.setToken = function (token) {
      $window.localStorage.setItem('api_token', token);
    };

    f.getToken = function () {
      return $window.localStorage.getItem('api_token');
    };

    f.destroyToken = function () {
      return $window.localStorage.removeItem('api_token');
    };

    f.getTokenParam = function () {
      return 'api_token=' + f.getToken();
    }

    f.create = function (data) {
      return $http.post(HTTP_URL + '/create', data);
    };

    f.auth = function (data) {
      return $http.post(HTTP_URL + '/auth', data);
    };

    f.exit = function () {
      f.destroyToken();
      f.destroyUser();
      $rootScope.$broadcast('userExit', {});
    };

    f.getIsAuth = function () {
      return $http.get(HTTP_URL + '/is-auth?' + f.getTokenParam());
    };

    return f;

  }]);

angular
  .module('app')
  .controller('appCtrl', ['$scope', 'User', function ($scope, User) {

    'use strict';

    var c = {};

    c.isAuth = false;
    c.isAuthLoaded = false;
    c.user = {};

    // User
    $scope.$watch(function () {
      return c.user;
    }, function() {
      User.setUser(c.user);
    });

    c.getIsAuth = function () {
      c.isAuthLoaded = false;
      User.getIsAuth().success(function(response) {
        c.isAuth = true;
        c.isAuthLoaded = true;
        c.user = response.data.user;
      }).error(function(response) {
        c.isAuth = false;
        c.isAuthLoaded = true;
      });
    };

    $scope.$on('setAuthOn', function(e, data) {
      c.isAuth = true;
      c.user = data.user;
      console.log(data);
    });

    $scope.$on('userExit', function() {
      c.isAuth = false;
    });

    c.getIsAuth();

    return c;

  }]);

angular
  .module('app')
  .controller('authCtrl', ['$scope', 'ngDialog', 'User', function ($scope, ngDialog, User) {

    'use strict';

    var c = {};

    $scope.user = {};
    c.authErrors = null;
    c.authMessages = null;
    c.isAuthSuccess = false;

    // console.log('authCtrl');

    c.register = function (form) {

      if (form) {
        form.$setPristine();
        form.$setUntouched();
      }

      if (form.$invalid) {
        return;
      }

      User.create($scope.user).success(function(response) {

        c.user = response.user;
        c.authMessages = response.messages;
        c.authErrors = null;

      }).error(function(response) {

        c.authErrors = response.errors;
        c.authMessages = null;

      });
    };

    c.auth = function (form) {

      if (form) {
        form.$setPristine();
        form.$setUntouched();
      }

      if (form.$invalid) {
        return;
      }

      User.auth($scope.user).success(function(response) {

        c.user = response.user;
        c.authMessages = response.messages;
        c.authErrors = null;
        c.isAuthSuccess = true;

        User.setUser(response.user);

      }).error(function(response) {

        c.authErrors = response.errors;
        c.authMessages = null;

      });
    };

    c.authModalClose = function () {
      ngDialog.close();
    };

    return c;

  }]);

angular
  .module('app')
  .controller('blogCtrl', ['$scope', 'ngDialog', 'Post', function ($scope, ngDialog, Post) {

    'use strict';

    var c = {};

    c.isSpinner = true;
    c.isAnimation = true;

    c.posts = null;
    // c.blogs = [
    //   {
    //     'id': '1',
    //     'user_id': '1',
    //     'title': 'Котик мурмотик',
    //     'description': 'Стишочек про котика мурмотика',
    //     'text': 'Котик мурмотик - мягкий животик, Острые зубки и влажненький носик. Лежит на подушке и сладко зевает, Его там за ушко - Насяся щипает'
    //   },
    //   {
    //     'id': '2',
    //     'user_id': '1',
    //     'title': 'Зайка мой хороший',
    //     'description': 'Стишочек про зайчика',
    //     'text': 'Зайчик мой хороший - умненький красивый, Знает он все коды - коды бутерброды!! Сайтики красивые - всеееем он нарисует, Но а Наську Маську - потом он - утром зацелует'
    //   },
    //   {
    //     'id': '3',
    //     'user_id': '1',
    //     'title': 'Сказочку дарю тебе',
    //     'description': 'Стишочек про оленя',
    //     'text': 'Сказку даришь каждый день, И надев костюм Олень - Ты танцуешь до упада И смешишшь Меня Как Надо :) Целовашки целоваешь - крепко крепко обнимаешь, И обняв меня так сладко - Ти найкраще кошенятко =*'
    //   }
    // ];

    c.getBlogs = function () {

      Post.get().success(function(response) {
        c.posts = response.data.posts;

        // $scope
        console.log(c.posts);
      });

    };

    c.openPost = function (id) {

      var post = c.getPostById(id);

      ngDialog.open({
        template: 'js/post/template/post-popup.html',
        className: 'ngdialog-theme-default',
        showClose: true,
        closeByDocument: true,
        closeByEscape: true,
        controller: 'postCtrl',
        controllerAs: 'postCtrl',
        data: {
          post: post
        }
      });
    };

    c.openAdd = function () {

      ngDialog.open({
        template: 'js/post/template/add-popup.html',
        className: 'ngdialog-theme-default',
        showClose: true,
        closeByDocument: true,
        closeByEscape: true,
        controller: 'postCtrl',
        controllerAs: 'postCtrl'
      });
    };

    c.getPostById = function (id) {
      return _.find(c.blogs, function(o) { return o.id === id; });
    };

    return c;

  }]);

angular
  .module('app')
  .controller('headerCtrl', ['ngDialog', 'User', function (ngDialog, User) {

    'use strict';

    var c = {};

    c.isAnimation = true;

    console.log('headerCtrl');

    c.openAuth = function () {

      ngDialog.open({
        template: 'js/auth/template/auth-popup.html',
        className: 'ngdialog-theme-default',
        showClose: true,
        closeByDocument: true,
        closeByEscape: true,
        controller: 'authCtrl',
        controllerAs: 'authCtrl'
      });

    };

    c.openRegister = function () {

      ngDialog.open({
        template: 'js/auth/template/register-popup.html',
        className: 'ngdialog-theme-default',
        showClose: true,
        closeByDocument: true,
        closeByEscape: true,
        controller: 'authCtrl',
        controllerAs: 'authCtrl'
      });

    };

    c.exit = function () {
      User.exit();
    };

    return c;

  }]);

angular
  .module('app')
  .controller('postCtrl', ['$scope', 'Post', function ($scope, Post) {

    'use strict';

    var c = {};

    $scope.post = {};

    c.add = function (form) {

      console.log(form);

      if (form) {
        form.$setPristine();
        form.$setUntouched();
      }

      if (form.$invalid) {
        return;
      }

      // Post.add().success(function(response) {
      //
      //   c.messages = response.messages;
      //
      // }).error(function(response) {
      //
      //   c.errors = response.errors;
      //
      // });

    };

    return c;

  }]);

angular
  .module('app')
  .factory('Post', ['$http', function ($http) {

    'use strict';

    console.log('postService');

    var f = {};

    var URL = 'api/post';

    f.get = function () {
      return $http.get(URL);
    };

    f.create = function () {
      return $http.post(URL);
    };

    return f;

  }]);
